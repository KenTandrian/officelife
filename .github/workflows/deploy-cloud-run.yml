name: Deploy to Cloud Run (Dev)

on:
  push:
    branches: [deploy]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }} # TODO: update Google Cloud project id
  SERVICE: ${{ secrets.SERVICE }} # TODO: update Cloud Run service name
  REGION: ${{ secrets.REGION }} # TODO: update Cloud Run service region
  GAR_LOCATION: ${{ secrets.REGION }} # TODO: update Artifact Registry location
  REPOSITORY: ${{ secrets.GAR_REPOSITORY }} # TODO: update Artifact Registry repository name

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      - name: Set Up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v2'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build Container
        run: >
          docker build .
          -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          --build-arg DB_CONNECTION=${{ secrets.DB_CONNECTION }}
          --build-arg DB_HOST=${{ secrets.DB_HOST }}
          --build-arg DB_PORT=${{ secrets.DB_PORT }}
          --build-arg DB_DATABASE=${{ secrets.DB_DATABASE }}
          --build-arg DB_USERNAME=${{ secrets.DB_USERNAME }}
          --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }}

      - name: Push Container
        run: docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        run: gcloud run deploy ${{ env.SERVICE }} --image "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" --region ${{ env.REGION }} --port 80 --allow-unauthenticated

      # If required, use the Cloud Run url output in later steps
      - name: Test Output
        run: curl ${{ steps.deploy.outputs.url }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
